
from prettytable import PrettyTable

class Counting:
    def __init__(self):
        self.counting = [0, 0, 0, 0, 0] #TP, FN, FP, TN, FPFP
    
    def incr(self, pos, val=1):
        self.counting[pos]+=val

class Vulnerability:
    def __init__(self, id, tools, apps):
        self.id = id
        self.list_apps = apps
        self.list_tools = tools
        self.tools = {}
        for tool in tools:
            self.tools[tool] = {}
            for app in apps:
                self.tools[tool][app] = Counting()
        
    def incr_csrf(self, tool, app, num_vulns, pos):
        self.tools[tool][app].incr(pos, num_vulns)

    def incr_counting(self, tool, app, detected, real):
        if detected == 1:
            if real == 1:
                self.tools[tool][app].incr(0)
            else:
                self.tools[tool][app].incr(2)
        else:
            if real == 1:
                self.tools[tool][app].incr(1)
            else:
                self.tools[tool][app].incr(3)

    def incr_counting_fp(self, tool, app):
        self.tools[tool][app].incr(4)

    def __str__(self):
        table = PrettyTable()
        table.field_names = [""]+self.list_apps
        table.add_row([""]+len(self.list_apps)*[["TP","FN","FP","TN","FPFP"]])
        

        for k1, v1 in self.tools.items():
            row = []
            row.append(k1)
            for k2, v2 in v1.items():
                row.append(v2.counting)

            table.add_row(row)

        return str(table)